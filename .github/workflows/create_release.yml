name: CI/CT workflow for Rust Actix Web service docker image

on:
  workflow_dispatch:

jobs:
  set_stage:
    name: Determine Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Set semantic_version
        id: branch_check
        run: |
          semantic_version=$(cat version)
          echo "semantic_version=$semantic_version" >> $GITHUB_OUTPUT
      - name: Print Semantic version
        run: echo "semantic_version for branch '${{ github.base_ref }}' is '${{ steps.branch_check.outputs.semantic_version }}'"
    outputs:
      revision_number: ${{ steps.branch_check.outputs.revision_number }}
      semantic_version: ${{ steps.branch_check.outputs.semantic_version }}
  ci-ct-job-for-rust-actix-web-services:
    runs-on: ubuntu-latest
    needs: [set_stage]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: CI/CT Action for Rust Backend Services
        uses: MGTheTrain/github-actions/.github/actions/ci-ct-action-for-rust-backend-services@main
        with:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          SNYK_ORGANIZATION_ID: ${{ secrets.SNYK_ORGANIZATION_ID }}
          ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} 
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          WORKING_DIRECTORY: ./hello-world-service
          DOCKER_IMAGE_NAME: rust-hello-world-service:${{ needs.set_stage.outputs.semantic_version }}
  create-git-tags-from-version-file-job:
    runs-on: ubuntu-latest
    needs: [set_stage]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create git tag from version file
        uses: MGTheTrain/github-actions/.github/actions/create-git-tag-from-version-file@main
        with:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
